---
export interface SocialLink {
  platform: string;
  url: string;
  icon: string;
}

export interface Props {
  links: SocialLink[];
  size?: 'sm' | 'md' | 'lg';
  variant?: 'horizontal' | 'vertical';
  showLabels?: boolean;
  className?: string;
}

const { 
  links = [],
  size = 'md',
  variant = 'horizontal',
  showLabels = false,
  className = ''
} = Astro.props;

// 尺寸配置
const sizeClasses = {
  sm: 'text-lg',
  md: 'text-2xl',
  lg: 'text-3xl',
};

// 间距配置
const gapClasses = {
  horizontal: showLabels ? 'gap-6' : 'gap-4',
  vertical: 'gap-4',
};

// 布局配置
const layoutClasses = {
  horizontal: 'flex flex-wrap justify-center',
  vertical: 'flex flex-col items-center',
};

const baseItemClasses = 'text-gray-600 hover:text-gray-900 transition-colors duration-300';
const itemClasses = showLabels 
  ? `${baseItemClasses} flex items-center gap-2`
  : baseItemClasses;
---

{links.length > 0 && (
  <div class={`${layoutClasses[variant]} ${gapClasses[variant]} ${className}`}>
    {links.map((link) => (
      <a
        href={link.url}
        target={link.url.startsWith('http') ? '_blank' : undefined}
        rel={link.url.startsWith('http') ? 'noopener noreferrer' : undefined}
        class={`${itemClasses} ${sizeClasses[size]}`}
        title={link.platform}
        aria-label={`Visit ${link.platform}`}
      >
        <span class={link.icon}></span>
        {showLabels && (
          <span class="text-sm font-medium">{link.platform}</span>
        )}
      </a>
    ))}
  </div>
)}
