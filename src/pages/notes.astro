---
import Empty from "../components/Empty.astro";
import { TagGroup } from "../components/tag";
import Layout from "../layouts/Layout.astro";
import { formatDate } from "../utils";
import { getNotes, isDevEnv } from "../utils/content";

const notes = await getNotes();
const showDrafts = isDevEnv();

const sortedNotes = notes.sort(
  (a, b) =>
    new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
);
---

<Layout title="笔记" description="笔记列表">
  <div class="max-w-4xl mx-auto px-6 py-8">
    {
      sortedNotes.length === 0 ? <Empty /> : (
        <div class="space-y-6">
          {
            sortedNotes.map((note) => {
              const noteTags = note.data.tags.map((tag) => {
                return {
                  tag,
                };
              });
              return (
              <article class="group border-b border-gray-100 pb-6 last:border-b-0 hover:bg-gray-50/50 transition-colors duration-200 rounded-lg px-4 py-4">
                <div class="flex flex-col gap-3">
                  <div class="flex items-center gap-3 text-sm">
                    <time
                      datetime={note.data.pubDate.toISOString()}
                      class="text-gray-500"
                    >
                      {formatDate(note.data.pubDate)}
                    </time>
                    <TagGroup tags={noteTags} />
                    {
                      note.data.mood && (
                        <div class="flex items-center gap-1 text-xs text-gray-500">
                          <span class="i-tabler-mood-smile text-xs" />
                          <span>{note.data.mood}</span>
                        </div>
                      )
                    }
                  </div>

                  <h2 class="text-xl font-semibold text-gray-900 group-hover:text-primary-700 transition-colors duration-200">
                    <a href={`/notes/${note.slug}`} class="block flex items-center gap-2">
                      <span>{note.data.title}</span>
                      {showDrafts && note.data.draft && (
                        <span class="inline-flex items-center px-2 py-1 text-xs font-medium text-orange-600 bg-orange-100 rounded-full">
                          <span class="i-tabler-edit text-xs mr-1"></span>
                          草稿
                        </span>
                      )}
                    </a>
                  </h2>

                  {
                    note.data.content && (
                      <p class="text-gray-600 leading-relaxed line-clamp-2">
                        {note.data.content}
                      </p>
                    )
                  }
                  <div class="flex items-center justify-between pt-2">
                    <a
                      href={`/notes/${note.slug}`}
                      class="inline-flex items-center gap-1 text-sm text-primary-600 hover:text-primary-700 font-medium transition-colors duration-200"
                    >
                      <span>阅读笔记</span>
                      <span class="i-tabler-arrow-right text-xs" />
                    </a>
                    <div class="flex items-center gap-3">
                      {
                        note.data.location && (
                          <div class="flex items-center gap-1 text-xs text-gray-500">
                            <span class="i-tabler-map-pin text-xs" />
                            <span>{note.data.location}</span>
                          </div>
                        )
                      }
                    </div>
                  </div>
                </div>
              </article>
              );
            })
          }
        </div>
      )
    }
  </div>
</Layout>
